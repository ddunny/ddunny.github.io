{"version":3,"sources":["data.js","state/remain.js","components/Good.js","Detail.js","Loader.js","App.js","serviceWorker.js","index.js"],"names":["id","title","content","price","재고context","React","createContext","Good","img","재고","useContext","className","src","width","alt","toString","replace","박스","styled","div","제목","h4","props","색상","Detail","shoes","재고변경","useState","showAlert","showAlert변경","inputData","inputData변경","누른탭","누른탭변경","useEffect","timer","setTimeout","console","log","clearTimeout","useParams","history","useHistory","filter","v","onChange","e","target","value","Info","onClick","goBack","Nav","variant","defaultActiveKey","Item","Link","eventKey","TabContent","Loader","Spinner","as","animation","size","role","aria-hidden","App","Data","shoes변경","loading","setLoading","clickBtnCount","setClickBtnCount","Navbar","bg","expand","Brand","href","Toggle","aria-controls","Collapse","to","NavDropdown","Divider","exact","path","Jumbotron","Provider","map","i","key","axios","get","then","data","catch","error","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.cffe596e.chunk.js","sourcesContent":["export default [\n  {\n    id : 0,\n    title : \"White and Black\",\n    content : \"Born in France\",\n    price : 120000\n  },\n\n  {\n    id : 1,\n    title : \"Red Knit\",\n    content : \"Born in Seoul\",\n    price : 110000\n  },\n\n  {\n    id : 2,\n    title : \"Grey Yordan\",\n    content : \"Born in the States\",\n    price : 130000\n  }\n] ","import React from \"react\";\n\nexport let 재고context = React.createContext();\n","import React, { useContext } from \"react\";\nimport { 재고context } from \"../state/remain\";\n\nexport default function Good({ title, content, price, img }) {\n  let 재고 = useContext(재고context);\n\n  return (\n    <>\n      <div className=\"col-md-4\">\n        <img src={img} width=\"100%\" alt={\"판매상품\"} />\n        <h4>{title}</h4>\n        <p>{content}</p>\n        <p>{price.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}</p>\n        {재고}\n      </div>\n    </>\n  );\n}\n","import React, { useEffect, useState } from 'react';\nimport { useHistory, useParams } from 'react-router-dom';\nimport styled from 'styled-components';\nimport './Detail.scss';\nimport { Nav } from 'react-bootstrap';\n\nlet 박스 = styled.div`\n  padding: 20px;\n`;\n\nlet 제목 = styled.h4`\n  font-size: 35px;\n  color: ${(props) => props.색상};\n`;\n\nexport default function Detail({ shoes, 재고, 재고변경 }) {\n  let [showAlert, showAlert변경] = useState(true);\n  let [inputData, inputData변경] = useState('');\n\n  let [누른탭, 누른탭변경] = useState(0);\n\n  useEffect(() => {\n    // 1. 컴포넌트가 보일 때 실행, 컴포넌트가 업데이트 될 때 실행 (컴포넌트 렌더링이 끝난 후 실행)\n    let timer = setTimeout(() => {\n      showAlert변경(false);\n    }, 2000); // setTimeout : 변수에 저장해서 사용 많이 한다 ! 나중에 삭제할일도 있어서.\n    // 2. 컴포넌트가 사라질 때 코드를 실행시킬 수도 있음 . 무조건 함수를 써야 함 (구 언마운트역할)\n    console.log('안녕');\n    return function 어쩌구() {\n      //실행할 코드\n      clearTimeout(timer);\n    };\n\n    // 3. 여러개를 사용하고 싶다면 여러개 써도 된다. (실행 순서는 순차적!)\n  }, [showAlert]);\n\n  let { id } = useParams();\n  let history = useHistory();\n  let { title, content, price } = shoes.filter((v) => v.id === id * 1)[0];\n\n  return (\n    <>\n      <div className='container'>\n        <박스>\n          <제목 className='red'>제목을 써봅니다.</제목>\n        </박스>\n        {inputData}\n        <input\n          onChange={(e) => {\n            inputData변경(e.target.value);\n          }}\n        />\n        {showAlert ? (\n          <div className='my-alert'>\n            <p>재고가 얼마 남지 않았습니다.</p>\n          </div>\n        ) : null}\n        <div className='row'>\n          <div className='col-md-6'>\n            <img src={`https://codingapple1.github.io/shop/shoes${id * 1 + 1}.jpg`} width='100%' alt='이미지' />\n          </div>\n          <div className='col-md-6 mt-4'>\n            <h4 className='pt-5'>{title}</h4>\n            <p>{content}</p>\n            <p>{price}</p>\n            <Info 재고={재고}></Info>\n            <button\n              className='btn btn-danger'\n              onClick={() => {\n                재고변경([9, 10, 11]);\n              }}>\n              주문하기\n            </button>\n            <button\n              className='btn btn-danger'\n              onClick={() => {\n                history.goBack();\n              }}>\n              뒤로가기\n            </button>\n          </div>\n        </div>\n\n        <Nav className='mt-5' variant='tabs' defaultActiveKey='link-0'>\n          <Nav.Item>\n            <Nav.Link\n              eventKey='link-0'\n              onClick={() => {\n                누른탭변경(0);\n              }}>\n              Active\n            </Nav.Link>\n          </Nav.Item>\n          <Nav.Item>\n            <Nav.Link\n              eventKey='link-1'\n              onClick={() => {\n                누른탭변경(1);\n              }}>\n              Option 2\n            </Nav.Link>\n          </Nav.Item>\n        </Nav>\n\n        <TabContent 누른탭={누른탭}></TabContent>\n      </div>\n    </>\n  );\n}\n\nfunction Info({ 재고 }) {\n  return <p>재고: {재고[0]}</p>;\n}\n\nfunction TabContent({ 누른탭 }) {\n  console.log('tab');\n  if (누른탭 === 0) {\n    return <div>0번째 내용입니다.</div>;\n  } else if (누른탭 === 1) {\n    return <div>1번째 내용입니다.</div>;\n  }\n}\n","import React, { useState } from \"react\";\nimport Spinner from \"react-bootstrap/Spinner\";\n\nfunction Loader() {\n  return (\n    <Spinner\n      as=\"span\"\n      animation=\"border\"\n      size=\"sm\"\n      role=\"status\"\n      aria-hidden=\"true\"\n    />\n  );\n}\nexport default Loader;\n","/* eslint-disable */\nimport React, { useState } from 'react';\nimport { Navbar, Nav, NavDropdown, Jumbotron } from 'react-bootstrap';\nimport './App.css';\nimport Data from './data.js';\nimport Good from './components/Good';\nimport { Link, Route, Switch } from 'react-router-dom';\nimport Detail from './Detail.js';\nimport axios from 'axios';\nimport Loader from './Loader';\nimport { 재고context } from './state/remain';\n\nfunction App() {\n  let [shoes, shoes변경] = useState(Data);\n  let [loading, setLoading] = useState(false);\n  let [clickBtnCount, setClickBtnCount] = useState(0);\n  let [재고, 재고변경] = useState([10, 11, 12]); // 많은 컴포넌트들이 사용할 것 같기에 이곳에 작성\n\n  return (\n    <div className='App'>\n      <Navbar bg='light' expand='lg'>\n        <Navbar.Brand href='#home'>sunny's MALL</Navbar.Brand>\n        <Navbar.Toggle aria-controls='basic-navbar-nav' />\n        <Navbar.Collapse id='basic-navbar-nav'>\n          <Nav className='ml-auto'>\n            <Nav.Link as={Link} to='/'>\n              Home\n            </Nav.Link>\n            <Nav.Link as={Link} to='/detail'>\n              Detail\n            </Nav.Link>\n            <NavDropdown title='Dropdown' id='basic-nav-dropdown'>\n              <NavDropdown.Item href='#action/3.1'>Action</NavDropdown.Item>\n              <NavDropdown.Item href='#action/3.2'>Another action</NavDropdown.Item>\n              <NavDropdown.Item href='#action/3.3'>Something</NavDropdown.Item>\n              <NavDropdown.Divider />\n              <NavDropdown.Item href='#action/3.4'>Separated link</NavDropdown.Item>\n            </NavDropdown>\n          </Nav>\n        </Navbar.Collapse>\n      </Navbar>\n\n      <Switch>\n        <Route exact path='/'>\n          <div>\n            <Jumbotron className='background'>\n              <h1>Welcome</h1>\n              <p>리액트 학습을 위해 만든 쇼핑몰입니다 :)</p>\n            </Jumbotron>\n            <div className='container'>\n              <재고context.Provider value={재고}>\n                <div className='row'>\n                  {shoes.map((v, i) => (\n                    <Good\n                      title={v.title}\n                      content={v.content}\n                      price={v.price}\n                      img={`https://codingapple1.github.io/shop/shoes${i + 1}.jpg`}\n                      key={`${v.title}${i}`}\n                    />\n                  ))}\n                </div>\n              </재고context.Provider>\n              {!clickBtnCount && (\n                <button\n                  className='btn btn-primary'\n                  onClick={() => {\n                    setLoading(true);\n                    axios\n                      .get('https://codingapple1.github.io/shop/data2.json')\n                      .then((v) => {\n                        setClickBtnCount(1);\n                        setLoading(false);\n                        console.log('성공', v);\n                        shoes변경([...shoes, ...v.data]);\n                      })\n                      .catch(() => {\n                        setLoading(false);\n                        console.error('실패');\n                      });\n                  }}>\n                  {loading && <Loader />}\n                  더보기\n                </button>\n              )}\n            </div>\n          </div>\n        </Route>\n        <Route path='/detail/:id'>\n          <Detail shoes={shoes} 재고={재고} 재고변경={재고변경} />\n        </Route>\n        <Route path='/:id'>\n          <div>아무거나</div>\n        </Route>\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}